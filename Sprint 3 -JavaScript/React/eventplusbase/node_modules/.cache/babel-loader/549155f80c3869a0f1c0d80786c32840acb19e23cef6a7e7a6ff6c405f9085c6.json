{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\54395989870\\\\Desktop\\\\Senai_Desenvolvimento_\\\\Sprint 3 -JavaScript\\\\React\\\\eventplusbase\\\\src\\\\Pages\\\\EventosAlunoPage\\\\EventosAlunoPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Header from \"../../Components/Header/Header\";\nimport MainContent from \"../../Components/MainContent/MainContent\";\nimport Title from \"../../Components/Title/Title\";\nimport Table from \"../EventosAlunoPage/TableEvA/TableEvA\";\nimport Container from \"../../Components/Container/Container\";\nimport { Select } from \"../../Components/FormComponents/FormComponents\";\nimport Spinner from \"../../Components/Spinner/Spinner\";\nimport Modal from \"../../Components/Modal/Modal\";\nimport api from \"../../Services/Service\";\nimport \"./EventosAlunoPage.css\";\nimport { UserContext } from \"../../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventosAlunoPage = () => {\n  _s();\n  // state do menu mobile\n  const [exibeNavbar, setExibeNavbar] = useState(false);\n  const [eventos, setEventos] = useState([]);\n  // select mocado\n  const [quaisEventos, setQuaisEventos] = useState([{\n    value: \"1\",\n    text: \"Todos os eventos\"\n  }, {\n    value: \"2\",\n    text: \"Meus eventos\"\n  }]);\n  const [tipoEvento, setTipoEvento] = useState(\"1\"); //código do tipo do Evento escolhido\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [notifyUser, setNotifyUser] = useState({});\n  const [toggle, setToggle] = useState(false);\n\n  // recupera os dados globais do usuário\n  const {\n    userData,\n    setUserData\n  } = useContext(UserContext);\n  useEffect(() => {\n    loadEventsType();\n    setShowSpinner(false);\n  }, [tipoEvento, userData.userId]);\n  async function loadEventsType() {\n    setShowSpinner(true);\n\n    //trazer todos os eventos\n    try {\n      if (tipoEvento === \"1\") {\n        const retorno = await api.get(\"/Evento\");\n        const retornoM = await api.get(`/PresencasEvento/ListarMinhas/${userData.userId}`);\n        const dadosMarcados = verificaPresenca(retorno.data, retornoM.data);\n        // // console.log(\"bla bla bla\");\n        console.log(dadosMarcados);\n        console.log(retorno.data);\n        setEventos(retorno.data);\n      } else {\n        let arrEventos = [];\n        const retornoM = await api.get(`/PresencasEvento/ListarMinhas/${userData.userId}`);\n        console.log(retornoM);\n        retornoM.data.forEach(e => {\n          arrEventos.push({\n            ...e.evento,\n            situacao: e.situacao,\n            idPresencaEvento: e.idPresencaEvento\n          });\n        });\n        console.log(arrEventos);\n        console.log(retornoM.data);\n        setEventos(arrEventos);\n      }\n    } catch (error) {\n      setNotifyUser({\n        titleNote: \"Atenção\",\n        textNote: \"Deu ruim na API\",\n        imgIcon: \"danger\",\n        imgAlt: \"Imagem de ilustração de sucesso. Moça segurando um balão com símbolo de confirmação ok.\",\n        showMessage: true\n      });\n    }\n    setShowSpinner(false);\n  }\n\n  // toggle meus eventos ou todos os eventos\n  function myEvents(tpEvent) {\n    setTipoEvento(tpEvent);\n  }\n  async function loadMyComentary(idComentary) {\n    return \"????\";\n  }\n  const showHideModal = () => {\n    setShowModal(showModal ? false : true);\n  };\n  const postMyComentary = () => {\n    alert(\"Remover o comentário\");\n  };\n  const commentaryRemove = () => {\n    alert(\"Remover o comentário\");\n  };\n  const verificaPresenca = (arrAllEvents, eventsUser) => {\n    for (let x = 0; x < arrAllEvents.length; x++) {\n      for (let i = 0; i < eventsUser.length; i++) {\n        if (arrAllEvents[x].idEvento === eventsUser[i].idEvento) {\n          arrAllEvents[x].situacao = true;\n          arrAllEvents[x].idPresencaEvento = eventsUser[i].idPresencaEvento;\n          break;\n        }\n      }\n    }\n  };\n\n  // async function getState()\n  // {\n  //   try {\n  //     const retornoGet = await api.get(\"/Evento\");\n  //     const retorno = await api.get(/PresencasEvento/ListarMinhas/${userData.userId});\n  //     setEventos(retornoGet.data)\n  //   } catch (error) {\n  //     alert(\"Algo deu Errado\")\n  //   }\n  // }\n\n  async function handleConnect(idEvent, whatTheFunction, idPresencaEvento = null) {\n    // {\n    //   \"situacao\": true,\n    //   \"idUsuario\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n    //   \"idEvento\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\"\n    // }\n    if (whatTheFunction === \"connect\") {\n      try {\n        const retorno = await api.post(`/PresencasEvento`, {\n          situacao: true,\n          idUsuario: userData.userId,\n          idEvento: idEvent\n        });\n        loadEventsType();\n      } catch (error) {\n        console.log(\"Erro ao conectar\");\n        console.log(error);\n      }\n      return;\n    }\n\n    //unconnect\n    try {\n      const retorno = await api.delete(`/PresencasEvento/${idPresencaEvento}`);\n      console.log(retorno);\n      loadEventsType();\n    } catch (error) {\n      console.log(\"Erro ao conectar\");\n      console.log(error);\n    }\n    // alert(\"Desconectar do evento\" + idEvent);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainContent, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          titleText: \"Eventos\",\n          additionalClass: \"custom-title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          id: \"id-tipo-evento\",\n          name: \"tipo-evento\",\n          required: true,\n          dados: quaisEventos // aqui o array dos tipos\n          ,\n          manipulationFunction: e => myEvents(e.target.value) // aqui só a variável state\n          ,\n          defaultValue: tipoEvento,\n          additionalClass: \"select-tp-evento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          dados: eventos,\n          fnConnect: handleConnect,\n          fnShowModal: () => {\n            showHideModal();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), showSpinner ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 22\n    }, this) : null, showModal ? /*#__PURE__*/_jsxDEV(Modal, {\n      userId: userData.userId,\n      showHideModal: showHideModal,\n      fnDelete: commentaryRemove,\n      fnGet: loadMyComentary,\n      fnPost: postMyComentary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n_s(EventosAlunoPage, \"EeNIgOlhlZyj2xS1O1oteWGs7mI=\");\n_c = EventosAlunoPage;\nexport default EventosAlunoPage;\nvar _c;\n$RefreshReg$(_c, \"EventosAlunoPage\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Header","MainContent","Title","Table","Container","Select","Spinner","Modal","api","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","EventosAlunoPage","_s","exibeNavbar","setExibeNavbar","eventos","setEventos","quaisEventos","setQuaisEventos","value","text","tipoEvento","setTipoEvento","showSpinner","setShowSpinner","showModal","setShowModal","notifyUser","setNotifyUser","toggle","setToggle","userData","setUserData","loadEventsType","userId","retorno","get","retornoM","dadosMarcados","verificaPresenca","data","console","log","arrEventos","forEach","e","push","evento","situacao","idPresencaEvento","error","titleNote","textNote","imgIcon","imgAlt","showMessage","myEvents","tpEvent","loadMyComentary","idComentary","showHideModal","postMyComentary","alert","commentaryRemove","arrAllEvents","eventsUser","x","length","i","idEvento","handleConnect","idEvent","whatTheFunction","post","idUsuario","delete","children","titleText","additionalClass","fileName","_jsxFileName","lineNumber","columnNumber","id","name","required","dados","manipulationFunction","target","defaultValue","fnConnect","fnShowModal","fnDelete","fnGet","fnPost","_c","$RefreshReg$"],"sources":["C:/Users/54395989870/Desktop/Senai_Desenvolvimento_/Sprint 3 -JavaScript/React/eventplusbase/src/Pages/EventosAlunoPage/EventosAlunoPage.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport Header from \"../../Components/Header/Header\";\r\nimport MainContent from \"../../Components/MainContent/MainContent\";\r\nimport Title from \"../../Components/Title/Title\";\r\nimport Table from \"../EventosAlunoPage/TableEvA/TableEvA\";\r\nimport Container from \"../../Components/Container/Container\";\r\nimport { Select } from \"../../Components/FormComponents/FormComponents\";\r\nimport Spinner from \"../../Components/Spinner/Spinner\";\r\nimport Modal from \"../../Components/Modal/Modal\";\r\nimport api from \"../../Services/Service\";\r\n\r\nimport \"./EventosAlunoPage.css\";\r\nimport { UserContext } from \"../../context/AuthContext\";\r\n\r\nconst EventosAlunoPage = () => {\r\n  // state do menu mobile\r\n  const [exibeNavbar, setExibeNavbar] = useState(false);\r\n  const [eventos, setEventos] = useState([]);\r\n  // select mocado\r\n  const [quaisEventos, setQuaisEventos] = useState([\r\n    { value: \"1\", text: \"Todos os eventos\" },\r\n    { value: \"2\", text: \"Meus eventos\" },\r\n  ]);\r\n\r\n  const [tipoEvento, setTipoEvento] = useState(\"1\"); //código do tipo do Evento escolhido\r\n  const [showSpinner, setShowSpinner] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [notifyUser, setNotifyUser] = useState({});\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  // recupera os dados globais do usuário\r\n  const { userData, setUserData } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    loadEventsType();\r\n\r\n    setShowSpinner(false);\r\n  }, [tipoEvento, userData.userId]);\r\n\r\n  async function loadEventsType() {\r\n    setShowSpinner(true);\r\n\r\n    //trazer todos os eventos\r\n    try {\r\n      if (tipoEvento === \"1\") {\r\n        const retorno = await api.get(\"/Evento\");\r\n        const retornoM = await api.get(\r\n          `/PresencasEvento/ListarMinhas/${userData.userId}`\r\n        );\r\n\r\n        const dadosMarcados = verificaPresenca(retorno.data, retornoM.data);\r\n        // // console.log(\"bla bla bla\");\r\n        console.log(dadosMarcados);\r\n        console.log(retorno.data);\r\n\r\n        setEventos(retorno.data);\r\n      } else {\r\n        let arrEventos = [];\r\n        const retornoM = await api.get(\r\n          `/PresencasEvento/ListarMinhas/${userData.userId}`\r\n        );\r\n        console.log(retornoM);\r\n        retornoM.data.forEach((e) => {\r\n          arrEventos.push({\r\n            ...e.evento,\r\n            situacao: e.situacao,\r\n            idPresencaEvento: e.idPresencaEvento,\r\n          });\r\n        });\r\n        console.log(arrEventos);\r\n        console.log(retornoM.data);\r\n        setEventos(arrEventos);\r\n      }\r\n    } catch (error) {\r\n      setNotifyUser({\r\n        titleNote: \"Atenção\",\r\n        textNote: \"Deu ruim na API\",\r\n        imgIcon: \"danger\",\r\n        imgAlt:\r\n          \"Imagem de ilustração de sucesso. Moça segurando um balão com símbolo de confirmação ok.\",\r\n        showMessage: true,\r\n      });\r\n    }\r\n    setShowSpinner(false);\r\n  }\r\n\r\n  // toggle meus eventos ou todos os eventos\r\n  function myEvents(tpEvent) {\r\n    setTipoEvento(tpEvent);\r\n  }\r\n\r\n  async function loadMyComentary(idComentary) {\r\n    return \"????\";\r\n  }\r\n\r\n  const showHideModal = () => {\r\n    setShowModal(showModal ? false : true);\r\n  };\r\n\r\n  const postMyComentary = () => {\r\n    alert(\"Remover o comentário\");\r\n  };\r\n\r\n  const commentaryRemove = () => {\r\n    alert(\"Remover o comentário\");\r\n  };\r\n\r\n  const verificaPresenca = (arrAllEvents, eventsUser) => {\r\n    for (let x = 0; x < arrAllEvents.length; x++) {\r\n      for (let i = 0; i < eventsUser.length; i++) {\r\n        if (arrAllEvents[x].idEvento === eventsUser[i].idEvento) {\r\n          arrAllEvents[x].situacao = true;\r\n          arrAllEvents[x].idPresencaEvento = eventsUser[i].idPresencaEvento;\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // async function getState()\r\n  // {\r\n  //   try {\r\n  //     const retornoGet = await api.get(\"/Evento\");\r\n  //     const retorno = await api.get(/PresencasEvento/ListarMinhas/${userData.userId});\r\n  //     setEventos(retornoGet.data)\r\n  //   } catch (error) {\r\n  //     alert(\"Algo deu Errado\")\r\n  //   }\r\n  // }\r\n\r\n  async function handleConnect(\r\n    idEvent,\r\n    whatTheFunction,\r\n    idPresencaEvento = null\r\n  ) {\r\n    // {\r\n    //   \"situacao\": true,\r\n    //   \"idUsuario\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\r\n    //   \"idEvento\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\"\r\n    // }\r\n    if (whatTheFunction === \"connect\") {\r\n      try {\r\n        const retorno = await api.post(`/PresencasEvento`, {\r\n          situacao: true,\r\n          idUsuario: userData.userId,\r\n          idEvento: idEvent,\r\n        });\r\n\r\n        loadEventsType();\r\n      } catch (error) {\r\n        console.log(\"Erro ao conectar\");\r\n        console.log(error);\r\n      }\r\n      return;\r\n    }\r\n\r\n    //unconnect\r\n    try {\r\n      const retorno = await api.delete(`/PresencasEvento/${idPresencaEvento}`);\r\n      console.log(retorno);\r\n      loadEventsType();\r\n    } catch (error) {\r\n      console.log(\"Erro ao conectar\");\r\n      console.log(error);\r\n    }\r\n    // alert(\"Desconectar do evento\" + idEvent);\r\n  }\r\n  return (\r\n    <>\r\n      {/* <Header exibeNavbar={exibeNavbar} setExibeNavbar={setExibeNavbar} /> */}\r\n\r\n      <MainContent>\r\n        <Container>\r\n          <Title titleText={\"Eventos\"} additionalClass=\"custom-title\" />\r\n\r\n          <Select\r\n            id=\"id-tipo-evento\"\r\n            name=\"tipo-evento\"\r\n            required={true}\r\n            dados={quaisEventos} // aqui o array dos tipos\r\n            manipulationFunction={(e) => myEvents(e.target.value)} // aqui só a variável state\r\n            defaultValue={tipoEvento}\r\n            additionalClass=\"select-tp-evento\"\r\n          />\r\n          <Table\r\n            dados={eventos}\r\n            fnConnect={handleConnect}\r\n            fnShowModal={() => {\r\n              showHideModal();\r\n            }}\r\n          />\r\n        </Container>\r\n      </MainContent>\r\n\r\n      {/* SPINNER -Feito com position */}\r\n      {showSpinner ? <Spinner /> : null}\r\n\r\n      {showModal ? (\r\n        <Modal\r\n          userId={userData.userId}\r\n          showHideModal={showHideModal}\r\n          fnDelete={commentaryRemove}\r\n          fnGet={loadMyComentary}\r\n          fnPost={postMyComentary}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventosAlunoPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}