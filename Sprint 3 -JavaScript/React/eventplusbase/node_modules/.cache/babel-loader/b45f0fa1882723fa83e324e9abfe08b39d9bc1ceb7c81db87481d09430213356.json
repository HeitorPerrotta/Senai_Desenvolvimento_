{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\54395989870\\\\Desktop\\\\Senai_Desenvolvimento_\\\\Sprint 3 -JavaScript\\\\React\\\\eventplusbase\\\\src\\\\Pages\\\\EventosAlunoPage\\\\EventosAlunoPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Header from \"../../Components/Header/Header\";\nimport MainContent from \"../../Components/MainContent/MainContent\";\nimport Title from \"../../Components/Title/Title\";\nimport Table from \"./TableEvA/TableEvA\";\nimport { dateFormateDbToView } from \"../../Utils/stringFunction\";\nimport Container from \"../../Components/Container/Container\";\nimport { Select } from \"../../Components/FormComponents/FormComponents\";\nimport Spinner from \"../../Components/Spinner/Spinner\";\nimport Modal from \"../../Components/Modal/Modal\";\nimport api from \"../../Services/Service\";\nimport \"./EventosAlunoPage.css\";\nimport { UserContext } from \"../../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventosAlunoPage = () => {\n  _s();\n  // state do menu mobile\n  const [exibeNavbar, setExibeNavbar] = useState(false);\n  const [eventos, setEventos] = useState([]);\n  // select mocado\n  const [quaisEventos, setQuaisEventos] = useState([{\n    value: 1,\n    text: \"Todos os eventos\"\n  }, {\n    value: 2,\n    text: \"Meus eventos\"\n  }]);\n  const [tipoEvento, setTipoEvento] = useState(1); //código do tipo do Evento escolhido\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  // recupera os dados globais do usuário\n  const {\n    userData,\n    setUserData\n  } = useContext(UserContext);\n  useEffect(() => {\n    async function loadEventsType() {\n      setShowSpinner(true);\n      try {\n        const promiseGet = await api.get(\"/Evento\");\n        setEventos(promiseGet.data);\n      } catch (error) {\n        alert(\"Deu erro em loadEvents\");\n      }\n    }\n    loadEventsType();\n    setShowSpinner(true);\n  }, []);\n\n  // toggle meus eventos ou todos os eventos\n  function myEvents(tpEvent) {\n    setTipoEvento(tpEvent);\n  }\n  async function loadMyComentary(idComentary) {\n    return \"????\";\n  }\n  const showHideModal = () => {\n    setShowModal(showModal ? false : true);\n  };\n  const commentaryRemove = () => {\n    alert(\"Remover o comentário\");\n  };\n  function handleConnect() {\n    alert(\"Desenvolver a função conectar evento\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainContent, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          titleText: \"Eventos\",\n          className: \"custom-title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          id: \"id-tipo-evento\",\n          name: \"tipo-evento\",\n          required: true,\n          dados: quaisEventos // aqui o array dos tipos\n          ,\n          manipulationFunction: e => myEvents(e.target.value) // aqui só a variável state\n          ,\n          defaultValue: tipoEvento,\n          additionalClass: \"select-tp-evento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          dados: eventos,\n          fnConnect: handleConnect,\n          fnShowModal: () => {\n            showHideModal();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), showSpinner ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 22\n    }, this) : null, showModal ? /*#__PURE__*/_jsxDEV(Modal, {\n      userId: userData.userId,\n      showHideModal: showHideModal,\n      fnDelete: commentaryRemove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n_s(EventosAlunoPage, \"/Ax5qpcKBBf13rl3dYVRfxYujDM=\");\n_c = EventosAlunoPage;\nexport default EventosAlunoPage;\nvar _c;\n$RefreshReg$(_c, \"EventosAlunoPage\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Header","MainContent","Title","Table","dateFormateDbToView","Container","Select","Spinner","Modal","api","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","EventosAlunoPage","_s","exibeNavbar","setExibeNavbar","eventos","setEventos","quaisEventos","setQuaisEventos","value","text","tipoEvento","setTipoEvento","showSpinner","setShowSpinner","showModal","setShowModal","userData","setUserData","loadEventsType","promiseGet","get","data","error","alert","myEvents","tpEvent","loadMyComentary","idComentary","showHideModal","commentaryRemove","handleConnect","children","titleText","className","fileName","_jsxFileName","lineNumber","columnNumber","id","name","required","dados","manipulationFunction","e","target","defaultValue","additionalClass","fnConnect","fnShowModal","userId","fnDelete","_c","$RefreshReg$"],"sources":["C:/Users/54395989870/Desktop/Senai_Desenvolvimento_/Sprint 3 -JavaScript/React/eventplusbase/src/Pages/EventosAlunoPage/EventosAlunoPage.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport Header from \"../../Components/Header/Header\";\r\nimport MainContent from \"../../Components/MainContent/MainContent\";\r\nimport Title from \"../../Components/Title/Title\";\r\nimport Table from \"./TableEvA/TableEvA\";\r\nimport { dateFormateDbToView } from \"../../Utils/stringFunction\";\r\nimport Container from \"../../Components/Container/Container\";\r\nimport { Select } from \"../../Components/FormComponents/FormComponents\";\r\nimport Spinner from \"../../Components/Spinner/Spinner\";\r\nimport Modal from \"../../Components/Modal/Modal\";\r\nimport api from \"../../Services/Service\";\r\n\r\nimport \"./EventosAlunoPage.css\";\r\nimport { UserContext } from \"../../context/AuthContext\";\r\n\r\nconst EventosAlunoPage = () => {\r\n  // state do menu mobile\r\n  const [exibeNavbar, setExibeNavbar] = useState(false);\r\n  const [eventos, setEventos] = useState([]);\r\n  // select mocado\r\n  const [quaisEventos, setQuaisEventos] = useState([\r\n    { value: 1, text: \"Todos os eventos\" },\r\n    { value: 2, text: \"Meus eventos\" },\r\n  ]);\r\n\r\n  const [tipoEvento, setTipoEvento] = useState(1); //código do tipo do Evento escolhido\r\n  const [showSpinner, setShowSpinner] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // recupera os dados globais do usuário\r\n  const { userData, setUserData } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    async function loadEventsType() {\r\n      setShowSpinner(true)\r\n      try {\r\n        const promiseGet = await api.get(\"/Evento\");\r\n\r\n        setEventos(promiseGet.data);\r\n      } catch(error) {\r\n        alert(\"Deu erro em loadEvents\")\r\n      }\r\n    }\r\n    loadEventsType();\r\n    setShowSpinner(true)\r\n\r\n  }, []);\r\n\r\n  // toggle meus eventos ou todos os eventos\r\n  function myEvents(tpEvent) {\r\n    setTipoEvento(tpEvent);\r\n  }\r\n\r\n  async function loadMyComentary(idComentary) {\r\n    return \"????\";\r\n  }\r\n\r\n  const showHideModal = () => {\r\n    setShowModal(showModal ? false : true);\r\n  };\r\n\r\n  const commentaryRemove = () => {\r\n    alert(\"Remover o comentário\");\r\n  };\r\n\r\n  function handleConnect() {\r\n    alert(\"Desenvolver a função conectar evento\");\r\n  }\r\n  return (\r\n    <>\r\n      {/* <Header exibeNavbar={exibeNavbar} setExibeNavbar={setExibeNavbar} /> */}\r\n\r\n      <MainContent>\r\n        <Container>\r\n          <Title titleText={\"Eventos\"} className=\"custom-title\" />\r\n\r\n          <Select\r\n            id=\"id-tipo-evento\"\r\n            name=\"tipo-evento\"\r\n            required={true}\r\n            dados={quaisEventos} // aqui o array dos tipos\r\n            manipulationFunction={(e) => myEvents(e.target.value)} // aqui só a variável state\r\n            defaultValue={tipoEvento}\r\n            additionalClass=\"select-tp-evento\"\r\n          />\r\n          <Table\r\n            dados={eventos}\r\n            fnConnect={handleConnect}\r\n            fnShowModal={() => {\r\n              showHideModal();\r\n            }}\r\n          />\r\n        </Container>\r\n      </MainContent>\r\n\r\n      {/* SPINNER -Feito com position */}\r\n      {showSpinner ? <Spinner /> : null}\r\n\r\n      {showModal ? (\r\n        <Modal\r\n          userId={userData.userId}\r\n          showHideModal={showHideModal}\r\n          fnDelete={commentaryRemove}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventosAlunoPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}