[{"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\index.js":"1","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\App.js":"2","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\reportWebVitals.js":"3","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\context\\AuthContext.js":"4","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Routes\\routes.js":"5","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Routes\\PrivateRoute.jsx":"6","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Pages\\EventosAlunoPage\\EventosAlunoPage.jsx":"7","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Pages\\TestePage\\TestePage.jsx":"8","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Pages\\TipoEventosPage\\TipoEventosPage.jsx":"9","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Pages\\EventosPage\\EventosPage.jsx":"10","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Pages\\LoginPage\\LoginPage.jsx":"11","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Pages\\HomePage\\HomePage.jsx":"12","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\Footer\\Footer.jsx":"13","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\Header\\Header.jsx":"14","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\Notification\\Notification.js":"15","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Services\\Service.js":"16","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\Spinner\\Spinner.js":"17","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\Title\\Title.jsx":"18","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\MainContent\\MainContent.jsx":"19","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\Container\\Container.jsx":"20","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\FormComponents\\FormComponents.jsx":"21","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\Modal\\Modal.jsx":"22","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Pages\\EventosAlunoPage\\TableEvA\\TableEvA.jsx":"23","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\ImageIllustrator\\ImageIllustrator.jsx":"24","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\Banner\\Banner.jsx":"25","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\NextEvent\\NextEvent.jsx":"26","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\ContactSection\\ContactSection.jsx":"27","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Pages\\EventosPage\\TableEv\\TableEv.jsx":"28","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Pages\\TipoEventosPage\\TableTp\\TableTp.jsx":"29","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\PerfilUsuario\\PerfilUsuario.jsx":"30","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\Nav\\Nav.jsx":"31","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\VisionSection\\VisionSection.jsx":"32","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Utils\\stringFunction.js":"33","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\Toggle\\Toggle.jsx":"34"},{"size":552,"mtime":1699464923059,"results":"35","hashOfConfig":"36"},{"size":589,"mtime":1701374986760,"results":"37","hashOfConfig":"36"},{"size":375,"mtime":1699464923059,"results":"38","hashOfConfig":"36"},{"size":373,"mtime":1701713704029,"results":"39","hashOfConfig":"36"},{"size":1624,"mtime":1701716822592,"results":"40","hashOfConfig":"36"},{"size":256,"mtime":1701375408427,"results":"41","hashOfConfig":"36"},{"size":6347,"mtime":1701980256119,"results":"42","hashOfConfig":"36"},{"size":582,"mtime":1700155733969,"results":"43","hashOfConfig":"36"},{"size":7913,"mtime":1700847423036,"results":"44","hashOfConfig":"36"},{"size":10153,"mtime":1701720611822,"results":"45","hashOfConfig":"36"},{"size":3577,"mtime":1701373808057,"results":"46","hashOfConfig":"36"},{"size":2033,"mtime":1701288343976,"results":"47","hashOfConfig":"36"},{"size":309,"mtime":1700155733953,"results":"48","hashOfConfig":"36"},{"size":1150,"mtime":1700155733953,"results":"49","hashOfConfig":"36"},{"size":2500,"mtime":1700252376029,"results":"50","hashOfConfig":"36"},{"size":218,"mtime":1701372104897,"results":"51","hashOfConfig":"36"},{"size":403,"mtime":1700252461207,"results":"52","hashOfConfig":"36"},{"size":383,"mtime":1700155733969,"results":"53","hashOfConfig":"36"},{"size":236,"mtime":1700155733953,"results":"54","hashOfConfig":"36"},{"size":228,"mtime":1699464923013,"results":"55","hashOfConfig":"36"},{"size":1723,"mtime":1701720953496,"results":"56","hashOfConfig":"36"},{"size":1434,"mtime":1701712418685,"results":"57","hashOfConfig":"36"},{"size":2431,"mtime":1701976326090,"results":"58","hashOfConfig":"36"},{"size":569,"mtime":1700155733953,"results":"59","hashOfConfig":"36"},{"size":176,"mtime":1700155733953,"results":"60","hashOfConfig":"36"},{"size":1123,"mtime":1701714037674,"results":"61","hashOfConfig":"36"},{"size":948,"mtime":1700155733953,"results":"62","hashOfConfig":"36"},{"size":2702,"mtime":1701720626669,"results":"63","hashOfConfig":"36"},{"size":1848,"mtime":1700675463121,"results":"64","hashOfConfig":"36"},{"size":1113,"mtime":1701373865450,"results":"65","hashOfConfig":"36"},{"size":1479,"mtime":1701977843832,"results":"66","hashOfConfig":"36"},{"size":959,"mtime":1700155733969,"results":"67","hashOfConfig":"36"},{"size":441,"mtime":1701713948811,"results":"68","hashOfConfig":"36"},{"size":653,"mtime":1701712753509,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v6fepb",{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\index.js",[],[],"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\App.js",[],[],"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\reportWebVitals.js",[],[],"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\context\\AuthContext.js",[],[],"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Routes\\routes.js",[],[],"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Routes\\PrivateRoute.jsx",[],[],"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Pages\\EventosAlunoPage\\EventosAlunoPage.jsx",["179","180","181","182","183","184","185","186","187","188"],[],"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Pages\\TestePage\\TestePage.jsx",[],[],"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Pages\\TipoEventosPage\\TipoEventosPage.jsx",["189"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Title from \"../../Components/Title/Title\";\r\nimport \"./TipoEventosPage.css\";\r\nimport MainContent from \"../../Components/MainContent/MainContent\";\r\nimport ImageIllustrator from \"../../Components/ImageIllustrator/ImageIllustrator\";\r\nimport eventTypeImage from \"../../assets/images/tipo-evento.svg\";\r\nimport Container from \"../../Components/Container/Container\";\r\nimport TableTp from \"./TableTp/TableTp\";\r\n\r\nimport { Button, Input } from \"../../Components/FormComponents/FormComponents\";\r\n\r\nimport api from \"../../Services/Service\";\r\n\r\nimport Notification from \"../../Components/Notification/Notification\";\r\n\r\nimport Spinner from \"../../Components/Spinner/Spinner\"\r\n\r\nconst TipoEventos = () => {\r\n  //satate do componente Notification\r\n  const [notifyUser, setNotifyUser] = useState({});\r\n  const [showSpinner, setShowSpinner] = useState(false);\r\n\r\n  const [frmEdit, setFrmEdit] = useState(false);\r\n\r\n  const [titulo, setTitulo] = useState(\"\");\r\n  const [idEvento, setIdEvento] = useState(null);//usar apenas para a edição\r\n\r\n  const [tipoEventos, setTipoEventos] = useState([\r\n    // {\"idTipoEvento\": \"123\", \"titulo\": \"Evento ABC\"},\r\n    // {\"idTipoEvento\": \"555\", \"titulo\": \"Evento xpto\"},\r\n    // {\"idTipoEvento\": \"444\", \"titulo\": \"Evento de JavaScript\"}\r\n  ]); //array mocado\r\n\r\n  useEffect(() => {\r\n    async function getTipoEventos() {\r\n      try {\r\n        const promise = await api.get(\"/TiposEvento\");\r\n\r\n        console.log(promise.data);\r\n        setTipoEventos(promise.data);\r\n      } catch (error) {\r\n        alert(\"Deu ruim na API!\");\r\n      }\r\n    }\r\n    getTipoEventos();\r\n    console.log(\"A TIPO EVENTOS FOI MONTADA!\");\r\n    \r\n  }, []);\r\n\r\n  async function handleSubmit(e) {\r\n    setShowSpinner(true);\r\n    // parar o submit do formulário\r\n    e.preventDefault();\r\n    // validar pelo menos 3 caracteres\r\n    if (titulo.trim().length < 3) {\r\n      alert(\"O Título deve ter no mínimo 3 caracteres\");\r\n      return;\r\n    }\r\n    // chamar a api\r\n    try {\r\n      const retorno = await api.post(\"/TiposEvento\", { titulo: titulo });\r\n\r\n      setNotifyUser({\r\n        titleNote: \"Sucesso\",\r\n        textNote: `Cadastrado com sucesso!`,\r\n        imgIcon: \"success\",\r\n        imgAlt:\r\n          \"Imagem de ilustração de sucesso. Moça segurando um balão com símbolo de confirmação ok.\",\r\n        showMessage: true,\r\n      });\r\n\r\n      const retornoGet = await api.get(`/TiposEvento`);\r\n      setTipoEventos(retornoGet.data);\r\n      console.log(\"CADASTRO COM SUCESSO!\");\r\n      console.log(retorno.data);\r\n      setTitulo(\"\"); //limpa a variável\r\n    } catch (error) {\r\n      console.log(\"Deu ruim na api: \");\r\n      console.log(error);\r\n    }\r\n    setShowSpinner(false);\r\n  }\r\n  /****************** EDITAR CADASTRO ******************/\r\n\r\n  async function showUpdateForm(idElemento) {\r\n    setFrmEdit(true);\r\n\r\n    try {\r\n      // fazer um getById para pegar os dados\r\n      const retorno = await api.get(`/TiposEvento/${idElemento}`);\r\n\r\n      // preencher o título e o id no state\r\n      setTitulo(retorno.data.titulo);\r\n      setIdEvento(retorno.data.idTipoEvento);\r\n\r\n    } catch (error) {\r\n      alert(\"Não foi possível mostrar a tela de edição, tente novamente!\");\r\n    }\r\n  }\r\n\r\n  async function handleUpdate(e) {\r\n    try {\r\n      e.preventDefault();\r\n\r\n      // salvar os dados\r\n      const retorno = await api.put(`/TiposEvento/${idEvento}`, {\r\n        titulo: titulo\r\n      });\r\n\r\n      setNotifyUser({\r\n        titleNote: \"Sucesso\",\r\n        textNote: `Atualizado com sucesso!`,\r\n        imgIcon: \"success\",\r\n        imgAlt:\r\n          \"Imagem de ilustração de sucesso. Moça segurando um balão com símbolo de confirmação ok.\",\r\n        showMessage: true,\r\n      });\r\n\r\n      // atualizar o state (apiGet)\r\n      const retornoGet = await api.get(`/TiposEvento`);\r\n      setTipoEventos(retornoGet.data);// atualiza o state da tabela\r\n      // limpar o state do título e do idEvento\r\n      editActionAbort();\r\n\r\n    } catch (error) {\r\n      alert(\"Problemas na atualização. Verifique a conexão com a internet!\");\r\n    }\r\n  }\r\n\r\n  // reseta o state e cancela a tela de edição\r\n  function editActionAbort() {\r\n    setFrmEdit(false);\r\n    setTitulo(\"\");\r\n    setIdEvento(null);\r\n  }\r\n\r\n  async function handleDelete(id) {\r\n    try {\r\n      const promise = await api.delete(`/TiposEvento/${id}`);\r\n      \r\n      const retornoGet = await api.get(`/TiposEvento`);\r\n      console.log(promise.data);\r\n      setTipoEventos(retornoGet.data);\r\n    } catch (error) {\r\n      alert(\"Deu ruim na API!\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <MainContent>\r\n      <Notification {...notifyUser} setNotifyUser={setNotifyUser} />\r\n      {/* <Spinner /> */}\r\n      \r\n      {/* spinner loading condicional */}\r\n      { showSpinner ? <Spinner /> : null }\r\n\r\n      {/* Cadastro de tipo eventos */}\r\n      <section className=\"cadastro-evento-section\">\r\n        <Container>\r\n          <div className=\"cadastro-evento__box\">\r\n            <Title titleText={\"Página Tipo Eventos\"} />\r\n            <ImageIllustrator\r\n              alterText={\"?????\"}\r\n              imageRender={eventTypeImage}\r\n            />\r\n\r\n            <form\r\n              className=\"ftipo-evento\"\r\n              onSubmit={frmEdit ? handleUpdate : handleSubmit}\r\n            >\r\n              {!frmEdit ? (\r\n                <>\r\n                  {/* Cadastrar */}\r\n                  <Input\r\n                    type={\"text\"}\r\n                    id={\"titulo\"}\r\n                    name={\"titulo\"}\r\n                    placeholder={\"Título\"}\r\n                    required={\"required\"}\r\n                    value={titulo}\r\n                    manipulationFunction={(e) => {\r\n                      setTitulo(e.target.value);\r\n                    }}\r\n                  />\r\n                  {/* <span>{titulo}</span> */}\r\n                  <Button\r\n                    type={\"submit\"}\r\n                    id={\"cadastrar\"}\r\n                    name={\"cadastrar\"}\r\n                    textButton={\"Cadastrar\"}\r\n                  />\r\n                </>\r\n              ) : (\r\n                \r\n                <>\r\n                    { /* Editar */ }\r\n                    \r\n                    <Input\r\n                      id={\"titulo\"}\r\n                      placeholder={\"Título\"}\r\n                      name={\"titulo\"}\r\n                      type={\"text\"}\r\n                      required={\"required\"}\r\n                      value={titulo}\r\n                      manipulationFunction={(e) => {\r\n                        setTitulo(e.target.value);\r\n                      }}\r\n                    />\r\n\r\n                    <div className=\"buttons-editbox\">\r\n\r\n                    <Button\r\n                      textButton=\"Atualizar\"\r\n                      id=\"atualizar\"\r\n                      name=\"atualizar\"\r\n                      type=\"submit\"\r\n                      additionalClass=\"button-component--middle\"\r\n                    />\r\n\r\n                    <Button\r\n                      textButton=\"Cancelar\"\r\n                      id=\"cancelar\"\r\n                      name=\"cancelar\"\r\n                      type=\"button\"\r\n                      manipulationFunction={editActionAbort}\r\n                      additionalClass=\"button-component--middle\"\r\n                    />\r\n\r\n                    </div>\r\n\r\n                  </>\r\n                \r\n              )}\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </section>\r\n\r\n      {/* Listagem de tipo eventos */}\r\n      <section className=\"lista-eventos-section\">\r\n        <Container>\r\n          <Title titleText={\"Lista Tipo Eventos\"} color=\"white\" />\r\n\r\n          <TableTp\r\n            dados={tipoEventos}\r\n            fnUpdate={showUpdateForm}\r\n            fnDelete={handleDelete}\r\n          />\r\n        </Container>\r\n      </section>\r\n    </MainContent>\r\n  );\r\n};\r\n\r\nexport default TipoEventos;","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Pages\\EventosPage\\EventosPage.jsx",["190","191","192","193"],[],"import React, { useState, useEffect } from \"react\";\r\nimport Title from \"../../Components/Title/Title\";\r\nimport TableEv from \"./TableEv/TableEv\";\r\nimport \"./EventosPage.css\";\r\nimport MainContent from \"../../Components/MainContent/MainContent\";\r\nimport ImageIllustrator from \"../../Components/ImageIllustrator/ImageIllustrator\";\r\nimport Notification from \"../../Components/Notification/Notification.js\";\r\nimport eventImage from \"../../assets/images/evento.svg\";\r\nimport Container from \"../../Components/Container/Container\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  Select,\r\n} from \"../../Components/FormComponents/FormComponents\";\r\nimport api from \"../../Services/Service\";\r\n\r\nconst EventosPage = () => {\r\n  const [notifyUser, setNotifyUser] = useState({});\r\n  const [frmEdit, setFrmEdit] = useState(false);\r\n  const [nomeEvento, setNomeEvento] = useState(\"\");\r\n  const [dataEvento, setDataEvento] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [instituicao, setInstituicao] = useState([]);\r\n  const [idTipoEvento, setIdTipoEvento] = useState([]);\r\n  const [Events, setEvents] = useState([]);\r\n  const [idEvento, setIdEvento] = useState(null)\r\n  const [typeEvents, setTypeEvents] = useState([]);\r\n\r\n\r\n    // chamar a api\r\n    async function getEventos() {\r\n      try {\r\n        const retornoGet = await api.get(\"/Evento\");\r\n        const retornoIt = await api.get(\"/Instituicao\");\r\n\r\n        setEvents(retornoGet.data);\r\n        setInstituicao(retornoIt.data[0].idInstituicao);\r\n      } catch (error) {\r\n        console.log(error);\r\n        alert(\"A Lista Eventos deu ruim ! ! !\");\r\n      }\r\n    }\r\n  useEffect(() => {\r\n\r\n\r\n    async function getTipoEventos() {\r\n      try {\r\n        const retornoGetTp = await api.get(\"/TiposEvento\");\r\n\r\n        setTypeEvents(retornoGetTp.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n        alert(\"A Lista Tipo Eventos deu ruim ! ! !\");\r\n      }\r\n    }\r\n    getEventos();\r\n    getTipoEventos();\r\n  }, []);\r\n\r\n  async function handleSubmit(e) {\r\n    //parar o submit do formulario\r\n    e.preventDefault();\r\n    //validar no minimo 3 caracteresx\r\n    if (nomeEvento.trim().length < 3) {\r\n      alert(\"O Nome do Evento deve ter no minimo 3 carecteres \");\r\n    }\r\n    //chamar a api\r\n\r\n    try {\r\n      const retorno = await api.post(\"/Evento\", {\r\n        nomeEvento: nomeEvento,\r\n        descricao: description,\r\n        dataEvento: dataEvento,\r\n        idTipoEvento: idTipoEvento,\r\n        idInstituicao: instituicao\r\n      });\r\n      getEventos();\r\n      <Notification {...notifyUser} setNotifyUser={setNotifyUser} />;\r\n\r\n      setNotifyUser({\r\n        titleNote: \"Sucesso\",\r\n        textNote: `Cadastrado com sucesso!`,\r\n        imgIcon: \"success\",\r\n        imgAlt:\r\n          \"Imagem de ilustração de sucesso. Moça segurando um balão com símbolo de confirmação ok.\",\r\n        showMessage: true,\r\n      });\r\n      console.log(retorno.data);\r\n      setNomeEvento(\"\"); //limpa a variavel\r\n    } catch (error) {\r\n      console.log(\"Deu ruim na api\");\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  //ATUALIZACAO DOS DADOS\r\n  \r\n  async function handleUpdate(e) {\r\n  //   e.preventDefault();\r\n  //   try {\r\n  //     const retorno = await api.put(`/Evento/` + idEvento, {\r\n  //       nomeEvento: nomeEvento,\r\n  //       descricao: description,\r\n  //       dataEvento: dataEvento,\r\n  //       idTipoEvento: idTipoEvento,\r\n  //       idInstituicao: instituicao\r\n  //     });\r\n\r\n  //     setNotifyUser({\r\n  //       titleNote: \"Sucesso\",\r\n  //       textNote: `Atualizado com sucesso!`,\r\n  //       imgIcon: \"success\",\r\n  //       imgAlt:\r\n  //         \"Imagem de ilustração de sucesso. Moça segurando um balão com símbolo de confirmação ok.\",\r\n  //       showMessage: true,\r\n  //     });\r\n\r\n  //     setNomeEvento(\"\"); //limpa a variavel\r\n  //     setDescription(\"\");\r\n  //     setDataEvento(\"\");\r\n  //     setInstituicao(\"\");\r\n  //     setIdTipoEvento(\"\");\r\n  //     setFrmEdit(false);\r\n\r\n  //     //atualizar o state (api get)\r\n  //     const retornoGet = await api.get(`/Evento`);\r\n  //     setEvents(retornoGet.data); //atualiza o state da tabela\r\n  //     editActionAbort(); //limpa o state do titulo e id\r\n  //   } catch (error) {\r\n  //     alert(\"Deu ruim no update\");\r\n  //   }\r\n  }\r\n\r\n  function editActionAbort() {\r\n  //   setFrmEdit(false);\r\n  //   setDataEvento(\"\");\r\n  //   setNomeEvento(\"\");\r\n  //   setDescription(\"\");\r\n  //   setInstituicao(\"\");\r\n  //   setIdTipoEvento(\"\");\r\n  //   setEvents(\"\");\r\n  }\r\n\r\n  async function showUpdateForm(id) {\r\n  //   setFrmEdit(true);\r\n  //   setDataEvento(id.dataEvento.slice(0, 10));\r\n  //   setNomeEvento(id.titulo);\r\n  //   setDescription(id.descricao);\r\n  //   setInstituicao(id.idInstituicao);\r\n  //   setIdTipoEvento(id.idTipoEvento);\r\n  //   setEvents(id.idEvento);\r\n  }\r\n  \r\n  //deletamentação\r\n  async function handleDelete(id) {\r\n    try {\r\n      const promise = await api.delete(`/Evento/${id}`);\r\n      getEventos();\r\n      console.log(promise.data);\r\n    } catch (error) {\r\n      alert(\"Deu ruim na API!\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <MainContent>\r\n      <Notification {...notifyUser} setNotifyUser={setNotifyUser} />\r\n\r\n      {/* Cadastro de tipo de eventos*/}\r\n      <section className=\"cadastro-evento-section\">\r\n        <Container>\r\n          <div className=\"cadastro-evento__box\">\r\n            <Title titleText={\"Página de Eventos\"} />\r\n            <ImageIllustrator alterText={\"???\"} imageRender={eventImage} />\r\n\r\n            <form\r\n              className=\"ftipo-evento\"\r\n              onSubmit={frmEdit ? handleUpdate : handleSubmit}\r\n            >\r\n              {!frmEdit ? (\r\n                <>\r\n                  <Input\r\n                    type={\"text\"}\r\n                    id={\"nome\"}\r\n                    name={\"nome\"}\r\n                    placeholder={\"Nome\"}\r\n                    value={nomeEvento}\r\n                    manipulationFunction={(e) => {\r\n                      setNomeEvento(e.target.value);\r\n                    }}\r\n                    //   manipulationFunction={\"???\"} // PENDENTE\r\n                  />\r\n\r\n                  <Input\r\n                    type={\"text\"}\r\n                    id={\"descricao\"}\r\n                    name={\"descricao\"}\r\n                    placeholder={\"Descrição\"}\r\n                    value={description}\r\n                    manipulationFunction={(e) => {\r\n                      setDescription(e.target.value);\r\n                    }}\r\n                    //   manipulationFunction={\"???\"} // PENDENTE\r\n                  />\r\n\r\n                  <Select\r\n                    dados={typeEvents}\r\n                    value={idTipoEvento}\r\n                    manipulationFunction={(e) => {\r\n                      setIdTipoEvento(e.target.value);\r\n                    }}\r\n                    required={\"required\"}\r\n                  />\r\n\r\n                  <Input\r\n                    type={\"date\"}\r\n                    id={\"data\"}\r\n                    name={\"data\"}\r\n                    required={\"required\"}\r\n                    value={dataEvento}\r\n                    manipulationFunction={(e) => {\r\n                      setDataEvento(e.target.value);\r\n                    }}\r\n                    //   placeholder={\"dd/mm/aaaa\"}\r\n                    //   manipulationFunction={\"???\"} // PENDENTE\r\n                  />\r\n\r\n                  <Button\r\n                    type={\"submit\"}\r\n                    id={\"cadastrar\"}\r\n                    name={\"cadastrar\"}\r\n                    textButton={\"Cadastrar\"}\r\n                    additionalClass={\"btn-cadastrar\"}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Input\r\n                    type={\"text\"}\r\n                    id={\"nome\"}\r\n                    name={\"nome\"}\r\n                    placeholder={\"Nome\"}\r\n                    value={nomeEvento}\r\n                    manipulationFunction={(e) => {\r\n                      setNomeEvento(e.target.value);\r\n                    }}\r\n                    //   manipulationFunction={\"???\"} // PENDENTE\r\n                  />\r\n\r\n                  <Input\r\n                    type={\"text\"}\r\n                    id={\"descricao\"}\r\n                    name={\"descricao\"}\r\n                    placeholder={\"Descrição\"}\r\n                    value={description}\r\n                    manipulationFunction={(e) => {\r\n                      setDescription(e.target.value);\r\n                    }}\r\n                    //   manipulationFunction={\"???\"} // PENDENTE\r\n                  />\r\n\r\n                  <Select\r\n                    typeEvents={typeEvents}\r\n                    value={idTipoEvento}\r\n                    manipulationFunction={(e) => {\r\n                      setIdTipoEvento(e.target.value);\r\n                    }}\r\n                    required={\"required\"}\r\n                  />\r\n\r\n                  <Input\r\n                    type={\"date\"}\r\n                    id={\"data\"}\r\n                    name={\"data\"}\r\n                    required={\"required\"}\r\n                    value={dataEvento}\r\n                    manipulationFunction={(e) => {\r\n                      setDataEvento(e.target.value);\r\n                    }}\r\n                    //   placeholder={\"dd/mm/aaaa\"}\r\n                    //   manipulationFunction={\"???\"} // PENDENTE\r\n                  />\r\n\r\n                  <Button\r\n                    type={\"submit\"}\r\n                    id={\"cadastrar\"}\r\n                    name={\"cadastrar\"}\r\n                    textButton={\"Cadastrar\"}\r\n                    additionalClass={\"btn-cadastrar\"}\r\n                  />\r\n                </>\r\n              )}\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </section>\r\n\r\n      {/* Listagem de tipos de eventos */}\r\n      <section className=\"lista-eventos-section\">\r\n        <Container>\r\n          <Title titleText={\"Lista de Eventos\"} color=\"white\" />\r\n\r\n          <TableEv\r\n            dados={Events}\r\n            fnUpdate={showUpdateForm}\r\n            fnDelete={handleDelete}\r\n          />\r\n        </Container>\r\n      </section>\r\n    </MainContent>\r\n  );\r\n};\r\n\r\nexport default EventosPage;","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Pages\\LoginPage\\LoginPage.jsx",["194"],[],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport ImageIllustrator from \"../../Components/ImageIllustrator/ImageIllustrator\";\r\nimport logo from \"../../assets/images/logo-pink.svg\";\r\nimport { Input, Button } from \"../../Components/FormComponents/FormComponents\";\r\nimport api from \"../../Services/Service\";\r\n\r\nimport loginImage from \"../../assets/images/login.svg\";\r\n\r\nimport \"./LoginPage.css\";\r\nimport { UserContext, userDecodeToken } from \"../../context/AuthContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst LoginPage = () => {\r\n  const navigate = useNavigate()\r\n  const [user, setUser] = useState({ email: \"\", senha: \"\" });\r\n  const { userData, setUserData } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    if(userData.name) navigate(\"/\")\r\n  })\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    \r\n    if (user.email.trim().length >= 3 && user.senha.trim().length >= 3) {\r\n      //chamar a Api\r\n      try {\r\n        const promise = await api.post(\"/Login\", {\r\n          email: user.email,\r\n          senha: user.senha,\r\n        });\r\n        console.log(promise.data.token);\r\n\r\n        const userFullToken = userDecodeToken(promise.data.token);\r\n        setUserData(userFullToken);//guardamentação dos dados decodificados (playload)\r\n        localStorage.setItem(\"token\", JSON.stringify(userFullToken));\r\n        navigate(\"/\")\r\n      } catch (error) {\r\n        alert(\r\n          \"Usuário ou Senha inválidos ou conexão com a internet foi interrompida\"\r\n        );\r\n\r\n      }\r\n    } else {\r\n      alert(\"Preencha os campos corretamente\");\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"layout-grid-login\">\r\n      <div className=\"login\">\r\n        <div className=\"login__illustration\">\r\n          <div className=\"login__illustration-rotate\"></div>\r\n          <ImageIllustrator\r\n            imageRender={loginImage}\r\n            altText=\"Imagem de um homem em frente de uma porta de entrada\"\r\n            additionalClass=\"login-illustrator \"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"frm-login\">\r\n          <img src={logo} className=\"frm-login__logo\" alt=\"\" />\r\n\r\n          <form className=\"frm-login__formbox\" onSubmit={handleSubmit}>\r\n            <Input\r\n              additionalClass=\"frm-login__entry\"\r\n              type=\"email\"\r\n              id=\"login\"\r\n              name=\"login\"\r\n              required={true}\r\n              value={user.email}\r\n              placeholder=\"Email\"\r\n              manipulationFunction={(e) => {\r\n                setUser({\r\n                  ...user,\r\n                  email: e.target.value,\r\n                });\r\n              }}\r\n            />\r\n            <Input\r\n              additionalClass=\"frm-login__entry\"\r\n              type=\"password\"\r\n              id=\"senha\"\r\n              name=\"senha\"\r\n              required={true}\r\n              value={user.senha}\r\n              onChange={(e) => {}}\r\n              placeholder=\"*****\"\r\n              manipulationFunction={(e) => {\r\n                setUser({\r\n                  ...user,\r\n                  senha: e.target.value.trim(),\r\n                });\r\n              }}\r\n            />\r\n\r\n            <a href=\"\" className=\"frm-login__link\">\r\n              Esqueceu a senha?\r\n            </a>\r\n\r\n            <Button\r\n              textButton={\"Login\"}\r\n              id=\"btn-login\"\r\n              name=\"btn-login\"\r\n              type=\"submit\"\r\n              className=\"frm-login__button\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Pages\\HomePage\\HomePage.jsx",[],[],"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\Footer\\Footer.jsx",[],[],"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\Header\\Header.jsx",[],[],"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\Notification\\Notification.js",[],[],"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Services\\Service.js",["195"],[],"import axios from \"axios\";\r\n\r\nconst apiPort = \"7118\";\r\nconst localApi = `https://localhost:${apiPort}/api`;\r\nconst externalApi = null;\r\n\r\nconst api = axios.create({\r\n    baseURL : localApi\r\n});\r\n\r\n\r\nexport default api;","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\Spinner\\Spinner.js",[],[],"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\Title\\Title.jsx",[],[],"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\MainContent\\MainContent.jsx",[],[],"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\Container\\Container.jsx",[],[],"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\FormComponents\\FormComponents.jsx",[],[],"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\Modal\\Modal.jsx",[],[],"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Pages\\EventosAlunoPage\\TableEvA\\TableEvA.jsx",["196"],[],"import React from \"react\";\r\nimport comentaryIcon from \"../../../assets/images/comentary-icon.svg\";\r\n// import trashDelete from \"../../../assets/images/trash-delete.svg\";\r\nimport { dateFormateDbToView } from \"../../../Utils/stringFunction\";\r\nimport ToggleSwitch from \"../../../Components/Toggle/Toggle\";\r\n// importa a biblioteca de tootips ()\r\nimport \"react-tooltip/dist/react-tooltip.css\";\r\nimport { Tooltip } from \"react-tooltip\";\r\n\r\n// import trashDelete from \"../../../assets/images/trash-delete.svg\";\r\nimport \"./TableEvA.css\";\r\n\r\nconst Table = ({ dados, fnConnect = null, fnShowModal = null }) => {\r\n  return (\r\n    <table className=\"tbal-data\">\r\n      <thead className=\"tbal-data__head\">\r\n        <tr className=\"tbal-data_head-row tbal-data_head-row--red-color\">\r\n          <th className=\"tbal-data_head-title tbal-data_head-title--big\">\r\n            Evento\r\n          </th>\r\n          <th className=\"tbal-data_head-title tbal-data_head-title--big\">\r\n            Data\r\n          </th>\r\n          <th className=\"tbal-data_head-title tbal-data_head-title--big\">\r\n            Ações\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {dados.map((e) => {\r\n          return (\r\n            <tr className=\"tbal-data__head-row\" key={Math.random()}>\r\n              <td className=\"tbal-data_data tbal-data_data--big\">\r\n                {e.nomeEvento}\r\n              </td>\r\n\r\n              <td className=\"tbal-data_data tbal-datadata--big tbal-data_btn-actions\">\r\n                {/* {e.dataEvento} */}\r\n                {dateFormateDbToView(e.dataEvento)}\r\n              </td>\r\n\r\n              <td className=\"tbal-data_data tbal-datadata--big tbal-data_btn-actions\">\r\n                <img\r\n                  className=\"tbal-data__icon\"\r\n                  idevento={e.idEvento}\r\n                  src={comentaryIcon}\r\n                  alt=\"\"\r\n                  onClick={fnShowModal}\r\n                />\r\n\r\n                <ToggleSwitch\r\n                toggleActive = {e.situacao}\r\n                manipulationFunction={() => {\r\n                  fnConnect(\r\n                    e.idEvento,\r\n                    e.situacao ? \"unconnect\" : \"connect\",\r\n                    e.idPresencaEvento //parametro opicional\r\n\r\n                  )\r\n                }}\r\n                />\r\n\r\n              </td>\r\n\r\n            </tr>\r\n          );\r\n\r\n        })}\r\n\r\n      </tbody>\r\n\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\ImageIllustrator\\ImageIllustrator.jsx",[],[],"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\Banner\\Banner.jsx",[],[],"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\NextEvent\\NextEvent.jsx",["197"],[],"import React from 'react';\r\nimport './NextEvent.css';\r\nimport { dateFormateDbToView } from \"../../Utils/stringFunction\";\r\n\r\nimport { Tooltip } from 'react-tooltip'\r\n\r\nconst NextEvent = ( {title, description, eventDate, idEvento} ) => {\r\n\r\n    function conectar(idEvento) {\r\n        alert(`Conectando ao evento: ${idEvento}`)\r\n    }\r\n\r\n    return (\r\n        <article className='event-card'>\r\n            <h2 className='event-card__title'>{title}</h2>\r\n\r\n            <p\r\n             className='event-card__description'\r\n             data-tooltip-id={idEvento}\r\n             data-tooltip-content={description}\r\n             data-tooltip-place=\"top\"\r\n             >\r\n                <Tooltip id={idEvento} className='tooltip' />\r\n                {description.substr(0, 16)} ...\r\n            </p>\r\n            <p className='event-card__description'>\r\n                {dateFormateDbToView(eventDate)}\r\n            </p>\r\n\r\n            <a  \r\n                onClick={() => {conectar(idEvento)}}\r\n                href=\"\" className='event-card__connect-link'>Conectar</a>\r\n        </article>\r\n    );\r\n};\r\n\r\nexport default NextEvent;","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\ContactSection\\ContactSection.jsx",[],[],"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Pages\\EventosPage\\TableEv\\TableEv.jsx",["198"],[],"import React, { Tooltip } from \"react\";\r\nimport \"./TableEv.css\";\r\n\r\nimport editPen from \"../../../assets/images/edit-pen.svg\";\r\nimport trashDelete from \"../../../assets/images/trash-delete.svg\";\r\n\r\nconst TableEv = ({ dados, fnUpdate, fnDelete }) => {\r\n  return (\r\n    <table className=\"table-data\">\r\n      <thead className=\"table-data__head\">\r\n        <tr className=\"table-data__head-row\">\r\n          <th className=\"table-data__head-title table-data__head-title--big\">\r\n            Evento\r\n          </th>\r\n          <th className=\"table-data__head-title table-data__head-title--big\">\r\n            Descrição\r\n          </th>\r\n          <th className=\"table-data__head-title table-data__head-title--big\">\r\n            Tipo de Evento\r\n          </th>\r\n          <th className=\"table-data__head-title table-data__head-title--big\">\r\n            Data\r\n          </th>\r\n          <th className=\"table-data__head-title table-data__head-title--little\">\r\n            Editar\r\n          </th>\r\n          <th className=\"table-data__head-title table-data__head-title--little\">\r\n            Deletar\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {dados.map((tp) => {\r\n          return (\r\n            <tr className=\"table-data__head-row\">\r\n              <td className=\"table-data__data table-data__data--big\">\r\n                {tp.nomeEvento}\r\n              </td>\r\n              <td className=\"table-data__data table-data__data--big\">\r\n                {tp.descricao}\r\n              </td>\r\n              <td className=\"table-data__data table-data__data--big\">\r\n                {tp.tiposEvento.titulo}\r\n              </td>\r\n              <td className=\"table-data__data table-data__data--big\">\r\n                {new Date(tp.dataEvento).toLocaleDateString()}\r\n              </td>\r\n\r\n              <td className=\"table-data__data table-data__data--little\">\r\n                <img\r\n                  className=\"table-data__icon\"\r\n                  src={editPen}\r\n                  alt=\"icone de caneta que simboliza o ato de editar\"\r\n                  onClick={() => {\r\n                    fnUpdate(tp.idEvento);\r\n                  }}\r\n                />\r\n              </td>\r\n\r\n              <td className=\"table-data__data table-data__data--little\">\r\n                <img\r\n                  className=\"table-data__icon\"\r\n                  src={trashDelete}\r\n                  alt=\"icone de lixeira que simboliza o ato de excluir algo\"\r\n                  onClick={() => {\r\n                    fnDelete(tp.idEvento);\r\n                  }}\r\n                />\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default TableEv;\r\n","C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Pages\\TipoEventosPage\\TableTp\\TableTp.jsx",[],[],"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\PerfilUsuario\\PerfilUsuario.jsx",[],[],"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\Nav\\Nav.jsx",[],[],"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\VisionSection\\VisionSection.jsx",[],[],"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Utils\\stringFunction.js",[],[],"C:\\Users\\54395989870\\Desktop\\Senai_Desenvolvimento_\\Sprint 3 -JavaScript\\React\\eventplusbase\\src\\Components\\Toggle\\Toggle.jsx",[],[],{"ruleId":"199","severity":1,"message":"200","line":2,"column":8,"nodeType":"201","messageId":"202","endLine":2,"endColumn":14},{"ruleId":"199","severity":1,"message":"203","line":17,"column":10,"nodeType":"201","messageId":"202","endLine":17,"endColumn":21},{"ruleId":"199","severity":1,"message":"204","line":17,"column":23,"nodeType":"201","messageId":"202","endLine":17,"endColumn":37},{"ruleId":"199","severity":1,"message":"205","line":20,"column":24,"nodeType":"201","messageId":"202","endLine":20,"endColumn":39},{"ruleId":"199","severity":1,"message":"206","line":28,"column":10,"nodeType":"201","messageId":"202","endLine":28,"endColumn":20},{"ruleId":"199","severity":1,"message":"207","line":29,"column":10,"nodeType":"201","messageId":"202","endLine":29,"endColumn":16},{"ruleId":"199","severity":1,"message":"208","line":29,"column":18,"nodeType":"201","messageId":"202","endLine":29,"endColumn":27},{"ruleId":"199","severity":1,"message":"209","line":32,"column":21,"nodeType":"201","messageId":"202","endLine":32,"endColumn":32},{"ruleId":"210","severity":1,"message":"211","line":38,"column":6,"nodeType":"212","endLine":38,"endColumn":35,"suggestions":"213"},{"ruleId":"199","severity":1,"message":"214","line":145,"column":15,"nodeType":"201","messageId":"202","endLine":145,"endColumn":22},{"ruleId":"199","severity":1,"message":"214","line":106,"column":13,"nodeType":"201","messageId":"202","endLine":106,"endColumn":20},{"ruleId":"199","severity":1,"message":"215","line":19,"column":19,"nodeType":"201","messageId":"202","endLine":19,"endColumn":29},{"ruleId":"199","severity":1,"message":"216","line":26,"column":10,"nodeType":"201","messageId":"202","endLine":26,"endColumn":18},{"ruleId":"199","severity":1,"message":"217","line":26,"column":20,"nodeType":"201","messageId":"202","endLine":26,"endColumn":31},{"ruleId":"199","severity":1,"message":"218","line":134,"column":12,"nodeType":"201","messageId":"202","endLine":134,"endColumn":27},{"ruleId":"219","severity":1,"message":"220","line":96,"column":13,"nodeType":"221","endLine":96,"endColumn":52},{"ruleId":"199","severity":1,"message":"222","line":5,"column":7,"nodeType":"201","messageId":"202","endLine":5,"endColumn":18},{"ruleId":"199","severity":1,"message":"223","line":8,"column":10,"nodeType":"201","messageId":"202","endLine":8,"endColumn":17},{"ruleId":"219","severity":1,"message":"220","line":30,"column":13,"nodeType":"221","endLine":32,"endColumn":62},{"ruleId":"199","severity":1,"message":"223","line":1,"column":17,"nodeType":"201","messageId":"202","endLine":1,"endColumn":24},"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'exibeNavbar' is assigned a value but never used.","'setExibeNavbar' is assigned a value but never used.","'setQuaisEventos' is assigned a value but never used.","'notifyUser' is assigned a value but never used.","'toggle' is assigned a value but never used.","'setToggle' is assigned a value but never used.","'setUserData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadEventsType'. Either include it or remove the dependency array.","ArrayExpression",["224"],"'retorno' is assigned a value but never used.","'setFrmEdit' is assigned a value but never used.","'idEvento' is assigned a value but never used.","'setIdEvento' is assigned a value but never used.","'editActionAbort' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'externalApi' is assigned a value but never used.","'Tooltip' is defined but never used.",{"desc":"225","fix":"226"},"Update the dependencies array to be: [loadEventsType, tipoEvento, userData.userId]",{"range":"227","text":"228"},[1514,1543],"[loadEventsType, tipoEvento, userData.userId]"]